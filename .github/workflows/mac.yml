name: 🍎 MacIntosh Builds
on: [ workflow_call, workflow_dispatch ]

jobs:
  build:
    name: 🍎 MacIntosh ${{ matrix.arch }}
    runs-on: ${{ matrix.runs_on }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # - arch: x64
          #   runs_on: macos-13
          #   py_arch: x64
          #   blender_version: "1.1.1"
          #   blender_arch: x64
          #   blender_platform: macos-x64
          - arch: arm64
            runs_on: macos-15
            py_arch: arm64
            blender_version: "1.1.2"
            blender_arch: arm64
            blender_platform: macos-arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: ${{ matrix.py_arch }}  # x64 or arm64

      - name: Download Wheels
        run: |
          mkdir source/wheels
          # Optional, fail fast if no native wheel exists for this arch
          pip wheel -w source/wheels allosaurus

      - name: Create manifest
        run: |
          cd source
          (cat ../blender_manifest_template_mac.toml; echo "wheels = ["; ls -1 wheels | sed 's/\(^.*$\)/  "\.\/wheels\/\1",/'; echo "]") > blender_manifest.toml

      - name: Setup Blender
        run: |
          cd ${{ github.workspace }}
          BLENDER_VERSION="4.5.2"
          BLENDER_VOLUME="blender-${BLENDER_VERSION}-macos-${{ matrix.arch }}"
          BLENDER_ARCHIVE="${BLENDER_VOLUME}.dmg"
          BLENDER_URL="https://download.blender.org/release/Blender4.5/${BLENDER_ARCHIVE}"
          curl -L ${BLENDER_URL} -o ${BLENDER_ARCHIVE}
          hdiutil attach ${BLENDER_ARCHIVE}
          echo "--ls /Volumes/Blender/Blender.app/Contents/MacOS--"
          ls /Volumes/Blender/Blender.app/Contents/MacOS

      - name: Build Extension
        run: |
          cd ${{ github.workspace }}
          mkdir extension
          "/Volumes/Blender/Blender.app/Contents/MacOS/Blender" --command extension build --source-dir source --output-filepath "extension/parrotLipsync-${{ matrix.blender_version }}-macos-${{ matrix.arch }}.zip"

      - name: Upload Package
        uses: actions/upload-artifact@v4
        with:
          name: parrotLipsync-${{ matrix.blender_version }}-macos-${{ matrix.arch }}
          path: "extension/parrotLipsync-${{ matrix.blender_version }}-macos-${{ matrix.arch }}.zip"
          compression-level: 0

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./my-artifact.zip
      #     asset_name: my-artifact.zip
      #     asset_content_type: application/zip