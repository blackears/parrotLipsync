name: ðŸªŸ Windows Builds
on: [ workflow_call, workflow_dispatch ]

jobs:
  build:
    name: ðŸªŸ Windows ${{ matrix.arch }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        platform: [windows]
        arch: [x64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
        
      - name: Setup Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      #- run: pip install allosaurus

      - name: Download Wheels
        run: |
          mkdir source/wheels
          pip wheel -w source/wheels allosaurus

      - name: Create manifest
        run: |
          cd source
          echo "--wheels--"
          (cat blender_manifest_base.toml; echo "wheels = ["; ls -1 wheels | sed 's/\(^.*$\)/  "\.\/wheels\/\1",/'; echo "]") > blender_manifest.toml
          cat blender_manifest.toml
#          ls source/wheels

      - name: Setup Blender
        run: |
          cd ..
          BLENDER_VERSION="4.5.1"
          BLENDER_ARCHIVE="blender-${BLENDER_VERSION}-windows-${{ matrix.arch }}.zip"
          BLENDER_URL="https://download.blender.org/release/Blender4.5/${BLENDER_ARCHIVE}"
          curl -L ${BLENDER_URL} -o ${BLENDER_ARCHIVE}
          unzip ${BLENDER_ARCHIVE}
          mv blender-${BLENDER_VERSION}-windows-${{ matrix.arch }} blender 
          echo "--root dir ls--"
          ls

      - name: Build Extension
        run: |
          mkdir extension
          blender/blender.exe --command extension build --source-dir source --output-dir extension
          ls extension

