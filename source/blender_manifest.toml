schema_version = "1.0.0"

# Example of manifest file for a Blender extension
# Change the values according to your extension
id = "parrot_lipsync"
version = "1.0.6"
name = "Parrot Lipsync"
tagline = "Auto generate keyframes for lipsyncing audio"
maintainer = "Mark McKay"
#maintainer = "Developer name <email@address.com>"
# Supported types: "add-on", "theme"
type = "add-on"

# Optional link to documentation, support, source files, etc
# website = "https://extensions.blender.org/add-ons/my-example-package/"
website = "https://github.com/blackears/parrotLipsync"

# Optional list defined by Blender and server, see:
# https://docs.blender.org/manual/en/dev/advanced/extensions/tags.html
tags = ["Animation", "Sequencer"]

blender_version_min = "4.2.0"
# # Optional: Blender version that the extension does not support, earlier versions are supported.
# # This can be omitted and defined later on the extensions platform if an issue is found.
# blender_version_max = "5.1.0"

# License conforming to https://spdx.org/licenses/ (use "SPDX: prefix)
# https://docs.blender.org/manual/en/dev/advanced/extensions/licenses.html
#license = [
#  "SPDX:GPL-3.0-or-later",
#]
license = [
  "SPDX:MIT",
]
# Optional: required by some licenses.
# copyright = [
#   "2002-2024 Developer Name",
#   "1998 Company Name",
# ]

# Optional list of supported platforms. If omitted, the extension will be available in all operating systems.
# platforms = ["windows-x64", "macos-arm64", "linux-x64"]
# Other supported platforms: "windows-arm64", "macos-x64"

# Optional: bundle 3rd party Python modules.
# https://docs.blender.org/manual/en/dev/advanced/extensions/python_wheels.html
# wheels = [
#   "./wheels/hexdump-3.3-py3-none-any.whl",
#   "./wheels/jsmin-3.0.1-py3-none-any.whl",
# ]


wheels = [
	"./wheels/babel-2.16.0-py3-none-any.whl",
	"./wheels/certifi-2024.7.4-py3-none-any.whl",
	"./wheels/charset_normalizer-3.3.2-cp312-cp312-win_amd64.whl",
	"./wheels/colorama-0.4.6-py2.py3-none-any.whl",
	"./wheels/Cython-3.0.11-cp312-cp312-win_amd64.whl",
	"./wheels/dateparser-1.1.8-py2.py3-none-any.whl",
	"./wheels/docopt-0.6.2-py2.py3-none-any.whl",
	"./wheels/dtw_python-1.5.1-cp312-cp312-win_amd64.whl",
	"./wheels/filelock-3.15.4-py3-none-any.whl",
	"./wheels/fsspec-2024.6.1-py3-none-any.whl",
	"./wheels/gruut-2.4.0-py3-none-any.whl",
	"./wheels/gruut_ipa-0.13.0-py3-none-any.whl",
	"./wheels/gruut_lang_ar-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_cs-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_de-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_en-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_es-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_fa-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_fr-2.0.2-py3-none-any.whl",
	"./wheels/gruut_lang_it-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_lb-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_nl-2.0.2-py3-none-any.whl",
	"./wheels/gruut_lang_pt-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_ru-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_sv-2.0.1-py3-none-any.whl",
	"./wheels/gruut_lang_sw-2.0.1-py3-none-any.whl",
	"./wheels/idna-3.8-py3-none-any.whl",
	"./wheels/jinja2-3.1.4-py3-none-any.whl",
	"./wheels/jsonlines-1.2.0-py2.py3-none-any.whl",
	"./wheels/llvmlite-0.43.0-cp312-cp312-win_amd64.whl",
	"./wheels/MarkupSafe-2.1.5-cp312-cp312-win_amd64.whl",
	"./wheels/more_itertools-10.4.0-py3-none-any.whl",
	"./wheels/mpmath-1.3.0-py3-none-any.whl",
	"./wheels/networkx-3.3-py3-none-any.whl",
	"./wheels/num2words-0.5.13-py3-none-any.whl",
	"./wheels/numba-0.60.0-cp312-cp312-win_amd64.whl",
	"./wheels/numpy-2.0.2-cp312-cp312-win_amd64.whl",
	"./wheels/numpy-2.1.0-cp312-cp312-win_amd64.whl",
	"./wheels/openai_whisper-20231117-py3-none-any.whl",
	"./wheels/python_crfsuite-0.9.10-cp312-cp312-win_amd64.whl",
	"./wheels/python_dateutil-2.9.0.post0-py2.py3-none-any.whl",
	"./wheels/pytz-2024.1-py2.py3-none-any.whl",
	"./wheels/regex-2024.7.24-cp312-cp312-win_amd64.whl",
	"./wheels/requests-2.32.3-py3-none-any.whl",
	"./wheels/scipy-1.14.1-cp312-cp312-win_amd64.whl",
	"./wheels/setuptools-73.0.1-py3-none-any.whl",
	"./wheels/six-1.16.0-py2.py3-none-any.whl",
	"./wheels/sympy-1.13.2-py3-none-any.whl",
	"./wheels/tiktoken-0.7.0-cp312-cp312-win_amd64.whl",
	"./wheels/torch-2.4.0-cp312-cp312-win_amd64.whl",
	"./wheels/tqdm-4.66.5-py3-none-any.whl",
	"./wheels/typing_extensions-4.12.2-py3-none-any.whl",
	"./wheels/tzdata-2024.1-py2.py3-none-any.whl",
	"./wheels/tzlocal-5.2-py3-none-any.whl",
	"./wheels/urllib3-2.2.2-py3-none-any.whl",
	"./wheels/whisper_timestamped-1.15.4-py3-none-any.whl",
]


# # Optional: add-ons can list which resources they will require:
# # * files (for access of any filesystem operations)
# # * network (for internet access)
# # * clipboard (to read and/or write the system clipboard)
# # * camera (to capture photos and videos)
# # * microphone (to capture audio)
# #
# # If using network, remember to also check `bpy.app.online_access`
# # https://docs.blender.org/manual/en/dev/advanced/extensions/addons.html#internet-access
# #
# # For each permission it is important to also specify the reason why it is required.
# # Keep this a single short sentence without a period (.) at the end.
# # For longer explanations use the documentation or detail page.
#
# [permissions]
# network = "Need to sync motion-capture data to server"
# files = "Import/export FBX from/to disk"
# clipboard = "Copy and paste bone transforms"

# Optional: build settings.
# https://docs.blender.org/manual/en/dev/advanced/extensions/command_line_arguments.html#command-line-args-extension-build
# [build]
# paths_exclude_pattern = [
#   "__pycache__/",
#   "/.git/",
#   "/*.zip",
# ]
